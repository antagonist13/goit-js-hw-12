{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\nexport async function getImages(query, page) {\nconst BASE_URL = 'https://pixabay.com';\nconst END_POINT = '/api/';\nconst searchParams = new URLSearchParams({\n    key:'43176233-1ec673b2575ffa542635b4c36',\n    q: `${query}`,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n    page: `${page}`,\n    per_page: 15   \n});\n    const url = `${BASE_URL}${END_POINT}?${searchParams}`;\n    const res = await axios.get(url)\n    return res.data\n}\n","export function createMarkup ({ largeImageURL, webformatURL, tags, likes, views, comments, downloads })\n{\n    return`<li class=\"gallery-item\">\n  <a class=\"gallery-link\" href=\"${largeImageURL}\">\n    <img\n      class=\"gallery-image\"\n      src=\"${webformatURL}\"\n      alt=\"${tags}\"\n    />\n  </a>\n  <div class=\"description\">\n  <div class=\"img-info\">\n  <span class=\"description-text\">Likes</span>\n  <p class=\"small-text\">${likes}</p>\n</div>\n<div class=\"img-info\">\n  <span class=\"description-text\">Views</span>\n  <p class=\"small-text\">${views}</p>\n</div>\n<div class=\"img-info\">\n  <span class=\"description-text\">Comments</span>\n  <p class=\"small-text\">${comments}</p>\n</div>\n<div class=\"img-info\">\n  <span class=\"description-text\">Downloads</span>\n  <p class=\"small-text\">${downloads}</p>\n</div>\n</div>\n</li>`\n}\n\n\n","import axios from 'axios';\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nimport { getImages } from './js/pixabay-api'\nimport { createMarkup } from './js/render-functions'\n\nconst gallery = document.querySelector(\".gallery\")\nconst searchForm = document.querySelector(\".gallery-form\")\nconst searchInput = document.querySelector(\".search-window\")\nconst loadingIndicator = document.querySelector('.loader');\nconst loadBtn = document.querySelector('.load-btn')\n\nlet query;\nlet currentPage = 1;\nconst pageSize = 15\nlet maxPage = 1\n\nsearchForm.addEventListener('submit', async (event) => {\n    event.preventDefault()\n    gallery.innerHTML = \"\"\n    query = searchInput.value\n    try {\n        mainCreating()\n    } catch (error) {\n        console.log(error)\n    }\n    showLoader();\n    searchInput.value = ''\n    }\n)\n\nloadBtn.addEventListener('click', onLoaderClick)\nfunction onLoaderClick() {\n  currentPage += 1;\n    try {\n        mainCreating()\n    } catch (error) {\n        console.log(error)\n    } \n//   myScroll();\n  checkBtnStatus();\n}\n\nasync function imgCreating() {\n    const img = getImages(query, currentPage)\n    const res = await img\n    maxPage = Math.ceil(res.total / pageSize);\n    return img\n}\nfunction imgTemplate(arr) {\n    return arr.map(createMarkup).join('');         \n}\nfunction showLoader() {\n  loadBtn.classList.remove('hidden');\n}\nfunction hideLoader() {\n  loadBtn.classList.add('hidden');\n}\nfunction checkBtnStatus() {\n  if (currentPage >= maxPage) {\n    hideLoader();\n  } else {\n    showLoader();\n  }\n}\nasync function mainCreating() {\n    loadingIndicator.style.display = 'block'\n        const el = await imgCreating()\n        const imgList = el.hits\n        if (el.hits.length === 0) {\n            iziToast.error({\n            message: `Sorry, there are no images matching your search query. Please try again!`,\n            position: 'topRight'\n            });\n        }\n    gallery.insertAdjacentHTML('beforeend', imgTemplate(imgList))\n    loadingIndicator.style.display = 'none'\n\n    let lightbox = new SimpleLightbox('.gallery li a', { captionsData: 'alt', captionsDelay: 250 });\n        lightbox.refresh()\n}"],"names":["getImages","query","page","BASE_URL","END_POINT","searchParams","url","axios","createMarkup","largeImageURL","webformatURL","tags","likes","views","comments","downloads","gallery","searchForm","searchInput","loadingIndicator","loadBtn","currentPage","pageSize","maxPage","event","mainCreating","error","showLoader","onLoaderClick","checkBtnStatus","imgCreating","img","res","imgTemplate","arr","hideLoader","el","imgList","iziToast","SimpleLightbox"],"mappings":"owBACO,eAAeA,EAAUC,EAAOC,EAAM,CAC7C,MAAMC,EAAW,sBACXC,EAAY,QACZC,EAAe,IAAI,gBAAgB,CACrC,IAAI,qCACJ,EAAG,GAAGJ,CAAK,GACX,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,KAAM,GAAGC,CAAI,GACb,SAAU,EACd,CAAC,EACSI,EAAM,GAAGH,CAAQ,GAAGC,CAAS,IAAIC,CAAY,GAEnD,OADY,MAAME,EAAM,IAAID,CAAG,GACpB,IACf,CChBO,SAASE,EAAc,CAAE,cAAAC,EAAe,aAAAC,EAAc,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAW,EACtG,CACI,MAAM;AAAA,kCACwBN,CAAa;AAAA;AAAA;AAAA,aAGlCC,CAAY;AAAA,aACZC,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAMSC,CAAK;AAAA;AAAA;AAAA;AAAA,0BAILC,CAAK;AAAA;AAAA;AAAA;AAAA,0BAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,0BAIRC,CAAS;AAAA;AAAA;AAAA,MAInC,CCpBA,MAAMC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAa,SAAS,cAAc,eAAe,EACnDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAmB,SAAS,cAAc,SAAS,EACnDC,EAAU,SAAS,cAAc,WAAW,EAElD,IAAInB,EACAoB,EAAc,EAClB,MAAMC,EAAW,GACjB,IAAIC,EAAU,EAEdN,EAAW,iBAAiB,SAAU,MAAOO,GAAU,CACnDA,EAAM,eAAgB,EACtBR,EAAQ,UAAY,GACpBf,EAAQiB,EAAY,MACpB,GAAI,CACAO,EAAc,CACjB,OAAQC,EAAO,CACZ,QAAQ,IAAIA,CAAK,CACpB,CACDC,IACAT,EAAY,MAAQ,EACnB,CACL,EAEAE,EAAQ,iBAAiB,QAASQ,CAAa,EAC/C,SAASA,GAAgB,CACvBP,GAAe,EACb,GAAI,CACAI,EAAc,CACjB,OAAQC,EAAO,CACZ,QAAQ,IAAIA,CAAK,CACpB,CAEHG,GACF,CAEA,eAAeC,GAAc,CACzB,MAAMC,EAAM/B,EAAUC,EAAOoB,CAAW,EAClCW,EAAM,MAAMD,EAClB,OAAAR,EAAU,KAAK,KAAKS,EAAI,MAAQV,CAAQ,EACjCS,CACX,CACA,SAASE,EAAYC,EAAK,CACtB,OAAOA,EAAI,IAAI1B,CAAY,EAAE,KAAK,EAAE,CACxC,CACA,SAASmB,GAAa,CACpBP,EAAQ,UAAU,OAAO,QAAQ,CACnC,CACA,SAASe,GAAa,CACpBf,EAAQ,UAAU,IAAI,QAAQ,CAChC,CACA,SAASS,GAAiB,CACpBR,GAAeE,EACjBY,IAEAR,GAEJ,CACA,eAAeF,GAAe,CAC1BN,EAAiB,MAAM,QAAU,QAC7B,MAAMiB,EAAK,MAAMN,EAAa,EACxBO,EAAUD,EAAG,KACfA,EAAG,KAAK,SAAW,GACnBE,EAAS,MAAM,CACf,QAAS,2EACT,SAAU,UACtB,CAAa,EAETtB,EAAQ,mBAAmB,YAAaiB,EAAYI,CAAO,CAAC,EAC5DlB,EAAiB,MAAM,QAAU,OAElB,IAAIoB,EAAe,gBAAiB,CAAE,aAAc,MAAO,cAAe,GAAG,CAAE,EACjF,QAAS,CAC1B"}